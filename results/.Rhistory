g_eff = list()
for (z in 1:ns){
x = df[[z]]
param[[z]] = x[which(x$gene_name==prot),1:6]
names(param)[[z]] = files[[z]]
}
sume = as.data.frame(do.call(rbind, param))
sume$author = gsub("_.+", "", rownames(sume))
sume$author = paste(str_to_title(sume$author), "et al.")
sume$publication_year = str_extract(rownames(sume), "[0-9]+")
sume_calc <- esc_mean_sd(grp1m = sume$mean_covid,
grp1sd = sume$sd_covid,
grp1n = sume$number_covid,
grp2m = sume$mean_healthy,
grp2sd = sume$sd_healthy,
grp2n = sume$number_healthy,
study = sume$author,
es.type = "g") %>%
as.data.frame()
sume_calc$w <- 1/sume_calc$se^2
cases[[i]] = sum(sume$number_covid)
controls[[i]] = sum(sume$number_healthy)
nstud[[i]] = length(sume$author)
m.gen <- metagen(TE = es,
seTE = se,
studlab = study,
data = sume_calc,
sm = "SMD",
fixed = FALSE,
random = TRUE,
method.tau = "REML",
#hakn = TRUE,
title = paste("Change in protein:", prot))
summary(m.gen)
m.gen <- update.meta(m.gen, prediction = TRUE)
summary(m.gen)
#find.outliers(m.gen)
#m.gen.inf <- InfluenceAnalysis(m.gen, random = TRUE)
#plot(m.gen.inf, "baujat") # error
sume[[i]] = sume
sume_calc[[i]] = sume_calc
names(m.gen)
mg.sum[[i]] = unlist(m.gen[mg.selected])
pdf(file = paste("../forest_plots/", prot, "_forestplot.pdf", sep=""), width = 8, height = 7)
forest.meta(m.gen,
sortvar = TE,
prediction=TRUE,
print.tau2 = FALSE,
leftlabs = c("Author", "n", "g", "SE"))
dev.off()
print(paste("Run:", i, "done."))
print(paste("Protein ", proteins[[i]], " identified in: ", nrow(sume), " studies.", sep=""))
}
getwd()
for (i in 1:length(proteins)) {
prot = proteins[[i]]
param = list()
eff_size = list()
g_eff = list()
for (z in 1:ns){
x = df[[z]]
param[[z]] = x[which(x$gene_name==prot),1:6]
names(param)[[z]] = files[[z]]
}
sume = as.data.frame(do.call(rbind, param))
sume$author = gsub("_.+", "", rownames(sume))
sume$author = paste(str_to_title(sume$author), "et al.")
sume$publication_year = str_extract(rownames(sume), "[0-9]+")
sume_calc <- esc_mean_sd(grp1m = sume$mean_covid,
grp1sd = sume$sd_covid,
grp1n = sume$number_covid,
grp2m = sume$mean_healthy,
grp2sd = sume$sd_healthy,
grp2n = sume$number_healthy,
study = sume$author,
es.type = "g") %>%
as.data.frame()
sume_calc$w <- 1/sume_calc$se^2
cases[[i]] = sum(sume$number_covid)
controls[[i]] = sum(sume$number_healthy)
nstud[[i]] = length(sume$author)
m.gen <- metagen(TE = es,
seTE = se,
studlab = study,
data = sume_calc,
sm = "SMD",
fixed = FALSE,
random = TRUE,
method.tau = "REML",
#hakn = TRUE,
title = paste("Change in protein:", prot))
summary(m.gen)
m.gen <- update.meta(m.gen, prediction = TRUE)
summary(m.gen)
#find.outliers(m.gen)
#m.gen.inf <- InfluenceAnalysis(m.gen, random = TRUE)
#plot(m.gen.inf, "baujat") # error
sume[[i]] = sume
sume_calc[[i]] = sume_calc
names(m.gen)
mg.sum[[i]] = unlist(m.gen[mg.selected])
pdf(file = paste("../forest_plots/", prot, "_forestplot.pdf", sep=""), width = 8, height = 7)
forest.meta(m.gen,
sortvar = TE,
prediction=TRUE,
print.tau2 = FALSE,
leftlabs = c("Author", "n", "g", "SE"))
dev.off()
print(paste("Run:", i, "done."))
print(paste("Protein ", proteins[[i]], " identified in: ", nrow(sume), " studies.", sep=""))
}
meta_results = as.data.frame(cbind(do.call(rbind, mg.sum), unlist(cases), unlist(controls)))
rem = c(15, 19, 31, 41:45)
meta_results[,-rem] = apply(meta_results[,-rem], 2, function(x) as.numeric(as.character(x)))
rownames(meta_results) = proteins
colnames(meta_results)[46:47] = c("cases", "controls")
meta_results$sum = meta_results$cases+meta_results$controls
meta_results$gene_name = proteins
meta_results = meta_results[,c(49:46, 1:45)]
meta_results$random.adj.pval = p.adjust(meta_results$pval.random, method="fdr")
meta_results$fixed.adj.pval = p.adjust(meta_results$pval.fixed, method="fdr")
sel = which(meta_results$pval.random<0.05)
getwd()
meta_sel = meta_results[sel,]
table(meta_sel$fixed.adj.pval<0.05)
table(meta_sel$random.adj.pval<0.05)
setwd("../../")
meta_sel = meta_sel[order(meta_sel$TE.random, decreasing = T),]
meta_sel$order = nrow(meta_sel):1
meta_sel2 = meta_sel[which(meta_sel$k.study==11),]
meta_sel2 = meta_sel[which(meta_sel$k.study==11),]
meta_sel2$cat = ifelse(meta_sel2$TE.random>0, "Up in COVID-19", "Down in COVID-19")
table(meta_sel2$cat, meta_sel2$cfcat)
meta_sel2 = meta_sel[which(meta_sel$k.study==11),]
meta_sel2 = meta_sel[which(meta_sel$k.study==11),]
meta_sel2$cat = ifelse(meta_sel2$TE.random>0, "Up in COVID-19", "Down in COVID-19")
#sel = which(meta_sel2$random.adj.pval<0.05)
mp = ggplot(meta_sel2, aes(TE.random, as.factor(order), col=cat)) +
geom_errorbar(aes(xmin=lower.random, xmax=upper.random)) +
geom_point(size=3, shape="diamond") +
scale_y_discrete("Proteins (gene name)", labels=rev(meta_sel2$gene_name)) +
theme_classic() +
geom_vline(xintercept = 0, col="black", linetype="dashed", size=1) +
scale_x_continuous("Random effect model: Estimate + 95% CI", breaks=seq(-5.5, 5, 0.5)) +
scale_color_manual("Alteration", values=c("#0072B2", "#D55E00")) +
theme(legend.position = c(0.8, 0.2))
mp
getwd()
ggsave("meta_analysis_sign_all_forest_11_studies.pdf", mp, width=9, height=7)
intersect(meta_sel$gene_name, det_prot$gene_name[which(det_prot$nstud==ns)])
meta_results$gene_name[grep("IGH|IGL|IGK", meta_results$gene_name)]
setwd("~/Desktop/covid_hirief/results")
tres = meta_results
tres$alteration = "Up in Covid-19"
tres$alteration[which(tres$TE.random<0)] = "Down in Covid-19"
tres$shade = abs(tres$TE.random)*-log10(tres$pval.random)
tres$shadcat = cut(tres$shade, breaks=c(0,0.25, 0.5, 0.75, 1, 1.5, 2.5, 7, 16))
levels(tres$shadcat) = c(1:8)
table(is.na(tres$shadcat))
table(tres$shadcat)
y <- tres[which(tres$shade>2.5 & tres$TE.random>0),]
r <- tres[which(tres$shade>2.5 & tres$TE.random<0),]
cov = ggplot(tres, aes(x=TE.random, y=-log10(pval.random), col=alteration)) +
geom_point(aes(alpha=as.numeric(shadcat))) +
theme_classic() +
ylab(expression(paste("-log10 ", italic("p"), " values"))) +
xlab("SMD") +
scale_alpha(range=c(0.1,1), guide="none") +
geom_hline(yintercept=-log10(0.05), col="red", linetype="dotdash", size=1) +
scale_color_manual("Alteration", values=c("#0072B2", "#D55E00")) +
theme(legend.position = c(0.9, 0.9)) +
geom_text_repel(data=y, aes(x=TE.random, y=-log10(pval.random), label=gene_name), col="#D55E00", vjust=0.5, hjust=0.1) +
geom_text_repel(data=r, aes(x=TE.random, y=-log10(pval.random), label=gene_name), col="#0072B2", vjust=0.5, hjust=-0.1) +
scale_x_continuous("", breaks=seq(round(min(tres$TE.random)),round(max(tres$TE.random)), 0.5)) +
scale_y_continuous("", breaks=seq(round(min(-log10(tres$pval.random), digits=1)),
round(max(-log10(tres$pval.random)), digits=1), 1))
cov
ggsave("volcano_meta_analysis.pdf", cov, width=6.25, height=5, units="in", dpi=600)
quartz(type = 'pdf', file = 'volcano_meta_analysis.pdf', width=6.25, height=5)
cov
dev.off()
dev.off()
quartz(type = 'pdf', file = 'volcano_meta_analysis.pdf', width=6.25, height=5)
cov
dev.off()
getwd()
setwd("/Users/haris.babacic/Desktop/covid_hirief/code/code_submission/results")
setwd("/Users/haris.babacic/Desktop/covid_hirief/code/code_submission/data")
setwd("../results/processed_data/summary_estimates")
setwd("../../")
getwd()
tres = meta_results
tres$alteration = "Up in Covid-19"
tres$alteration[which(tres$TE.random<0)] = "Down in Covid-19"
tres$shade = abs(tres$TE.random)*-log10(tres$pval.random)
tres$shadcat = cut(tres$shade, breaks=c(0,0.25, 0.5, 0.75, 1, 1.5, 2.5, 7, 16))
levels(tres$shadcat) = c(1:8)
table(is.na(tres$shadcat))
table(tres$shadcat)
y <- tres[which(tres$shade>2.5 & tres$TE.random>0),]
r <- tres[which(tres$shade>2.5 & tres$TE.random<0),]
cov = ggplot(tres, aes(x=TE.random, y=-log10(pval.random), col=alteration)) +
geom_point(aes(alpha=as.numeric(shadcat))) +
theme_classic() +
ylab(expression(paste("-log10 ", italic("p"), " values"))) +
xlab("SMD") +
scale_alpha(range=c(0.1,1), guide="none") +
geom_hline(yintercept=-log10(0.05), col="red", linetype="dotdash", size=1) +
scale_color_manual("Alteration", values=c("#0072B2", "#D55E00")) +
theme(legend.position = c(0.9, 0.9)) +
geom_text_repel(data=y, aes(x=TE.random, y=-log10(pval.random), label=gene_name), col="#D55E00", vjust=0.5, hjust=0.1) +
geom_text_repel(data=r, aes(x=TE.random, y=-log10(pval.random), label=gene_name), col="#0072B2", vjust=0.5, hjust=-0.1) +
scale_x_continuous("", breaks=seq(round(min(tres$TE.random)),round(max(tres$TE.random)), 0.5)) +
scale_y_continuous("", breaks=seq(round(min(-log10(tres$pval.random), digits=1)),
round(max(-log10(tres$pval.random)), digits=1), 1))
cov
ggsave("volcano_meta_analysis.pdf", cov, width=6.25, height=5, units="in", dpi=600)
quartz(type = 'pdf', file = 'volcano_meta_analysis.pdf', width=6.25, height=5)
cov
dev.off()
# Meta-comparison
tres = read.csv("covid_vs_hc_all_res.csv")
ov = intersect(meta_results$gene_name, tres$gene)
res = tres
res = res[which(res$gene %in% ov),]
res = res[which(res$adj.p<0.05),]
# Change metsign depending on the significance you want
res$metsign = meta_results$TE.random[match(res$gene, meta_results$gene_name)]
res$metsign = meta_sel$TE.random[match(res$gene, meta_sel$gene_name)]
table(is.na(res$metsign))[1]/nrow(res)
res$olcat = NA
res$olcat[which(res$fc>0 & res$metsign>0)] = paste('\U2191', "HiRIEF-MS,", '\U2191', "Meta-analysis")
res$olcat[which(res$fc>0 & res$metsign<0)] = paste('\U2191', "HiRIEF-MS,", '\U2193', "Meta-analysis")
res$olcat[which(res$fc<0 & res$metsign<0)] = paste('\U2193', "HiRIEF-MS,", '\U2193', "Meta-analysis")
res$olcat[which(res$fc<0 & res$metsign>0)] = paste('\U2193', "HiRIEF-MS,", '\U2191', "Meta-analysis")
t = table(res$olcat)
a = sum(t[c(1,2)])/sum(t)*100
cv = cor(res$fc, res$metsign, use="pairwise.complete.obs", method="spearman")
p = ggplot(res, aes(fc, metsign, col=olcat)) +
geom_point() +
geom_text_repel(label=res$gene) +
theme_classic() +
geom_vline(xintercept = 0, col="darkgray", linetype="dashed", size=0.5) +
geom_hline(yintercept = 0, col="darkgray", linetype="dashed", size=0.5) +
scale_x_continuous("HiRIEF LC-MS/MS, log2-FC COVID-19:Healthy", breaks=seq(-2,2,0.25)) +
scale_y_continuous("Meta-analysis, log2-FC COVID-19:Controls", breaks=seq(-3,3.5,0.5)) +
annotate("text", x=-1.5, y=1.5, hjust=0, col="black",
label=paste("Agreement: ", round(a, digits=3), "%", sep="")) +
annotate("text", x=-1.5, y=1.3, hjust=0, col="black",
label=paste("r = ", round(cv, digits=3), sep="")) +
scale_color_manual(name="change", values=c("#D55E00", "#009E73")) +
theme(legend.position = c(0.8, 0.15))
p
t
p
quartz(type = 'pdf', file = 'Meta_analysis_sign_vs_HiRIEF_adjpval_sign.pdf', width=8, height=6)
p
dev.off()
ggsave("Meta_analysis_sign_vs_HiRIEF_adjpval_sign.jpeg", p, dpi=600, width=8, height=6)
library("mada")
library("ggforce")
library(plotly)
studies = c("Babacic", "Shen", "Geyer", "Shu", "Di", "Messner-Discovery",
"Messner-Validation", "Suvarna", "Sullivan", "Overmyer", "Zhang")
names = list()
names[[1]] = rownames(t_summary[[1]])
for(i in 2:ns) {
names[[i]] = union(rownames(t_summary[[i]]), names[[i-1]])
}
t_summary
names[[1]] = rownames(t_summary[[1]])
srocsig = read.csv("SROC_and_DOR_significant_proteins_2022-06-08.csv")
sroc = read.csv("SROC_and_DOR_all_proteins_2022-06-08.csv")
library(ggpubr)
library(ggpmisc)
sroc$Diff = abs(sroc$Sensitivity-sroc$Specificity)
p1 = ggplot(sroc, aes(Specificity, Sensitivity)) +
geom_point() +
stat_smooth(method="glm", color="red") +
stat_cor(label.y = 0.5, method="spearman") +
stat_poly_eq(label.y=0.25, aes(label = paste(after_stat(rr.label), sep = "*\", \"*"))) +
scale_x_continuous(breaks=seq(0,1,0.1)) +
scale_y_continuous(breaks=seq(0,1,0.1)) +
theme_classic()
p1
p2 = ggplot(sroc, aes(k.study, Diff)) +
geom_point() +
theme_classic() +
stat_smooth(method="glm", color="red") +
stat_cor(label.x=2, label.y = 0.5, method="spearman") +
stat_poly_eq(label.x=3, label.y=0.8, aes(label = paste(after_stat(rr.label), sep = "*\", \"*"))) +
scale_x_continuous("N of studies", breaks=seq(0,12,1)) +
scale_y_continuous("Abs. difference between Se and Sp", breaks=seq(0,1,0.1))
p2
p3 = ggplot(sroc, aes(k.study, AUC)) +
geom_point() +
theme_classic() +
stat_smooth(method="glm", color="red") +
stat_cor(label.x=8, label.y = 0.5, method="spearman") +
stat_poly_eq(label.x=5, label.y=0.8, aes(label = paste(after_stat(rr.label), sep = "*\", \"*"))) +
scale_x_continuous("N of studies", breaks=seq(0,12,1)) +
scale_y_continuous("AUC", breaks=seq(0,1,0.1))
p3
p4 = ggplot(sroc, aes(k.study, I.2)) +
geom_point() +
theme_classic() +
stat_smooth(method="glm", color="red") +
stat_cor(label.x=8, label.y = 0.5, method="spearman") +
stat_poly_eq(label.x=5, label.y=0.8, aes(label = paste(after_stat(rr.label), sep = "*\", \"*"))) +
scale_x_continuous("N of studies", breaks=seq(0,12,1)) +
scale_y_continuous("I2 heterogeneity", breaks=seq(0,100,10))
p4
p = ggarrange(p1, p2, p3, p4, nrow=2, ncol=2)
ggexport(p, filename = "sroc_analysis_parameters.pdf", dpi=600, width=7, height=5.5)
sroc = sroc[which(sroc$k.study>2),]
sroc$cat = "Lower Se and Lower Sp"
sroc$cat[which(sroc$AUC>=0.9)] = "90%+"
sroc$cat[which(sroc$AUC>=0.8 & sroc$AUC<0.9)] = "80-89%"
sroc$cat[which(sroc$AUC>=0.7 & sroc$AUC<0.8)] = "70-79%"
sroc$cat[which(sroc$AUC<0.7)] = "<69%"
sroc$cat[which(!sroc$Gene_name %in% srocsig$Gene_name)] = "Not significant"
table(sroc$cat)
sroc$cat = as.factor(sroc$cat)
sroc$cat = ordered(sroc$cat, levels=levels(sroc$cat)[c(4,1:3)])
sroc2 = sroc[sroc$cat=="80-89%",]
p = ggplot(sroc, aes(1-Specificity, Sensitivity, col=cat)) +
geom_point() +
scale_x_continuous("FPR (1-Specificity)", limits=c(0,1), breaks=seq(0,1,0.1)) +
scale_y_continuous("Sensitivity", limits=c(0,1), breaks=seq(0,1,0.1)) +
theme_classic() +
geom_segment(x = 0, y = 0, xend = 1, yend = 1, col="black", linetype="dashed", size=1) +
scale_color_manual(name="SROC AUC", values=c(alpha("lightgray", 0.4), "#E69F00", "#009E73", "#D55E00")) +
theme(legend.position = c(0.8, 0.15)) +
geom_text_repel(data=sroc2, label=sroc2$Gene_name, max.overlaps = 30)
p
ggsave("Meta_analysis_SROC_curves_significant.pdf", p, dpi=600, width=7, height=5.5)
mtdats = read_rds("shiny_covid/data/mtdats.Rdata")
mtdats = read_rds("shiny_covid/data/mtdats.Rdata")
getwd()
mtdats = read_rds("shiny_covid/data/mtdats.Rdata")
mtdats = read_rds("mtdats.Rdata")
#### Choose sproteins of interest
sel = sroc2$Gene_name[which(sroc2$k.study==11 & sroc2$AUC>0.835)]
s = list()
srs = list()
rdf = list()
sspr = list()
auc = list()
sf = list()
for (z in sel) {
mtdatr = mtdats[[z]]
#### Forest plots
nam = studies[as.numeric(rownames(mtdatr))]
fit.reitsma = reitsma(mtdatr)
#### Extract data for the SROCs
s[[z]] = summary(fit.reitsma)
sr = sroc(fit.reitsma) ## To get the SROC curve data
msr = mcsroc(fit.reitsma)
re = ROCellipse(fit.reitsma, level=0.95)
rdf[[z]] = as.data.frame(re$ROCellipse)
srs[[z]] = as.data.frame(sr)
sspr[[z]] = as.data.frame(s[[z]]$coefficients[3:4,c(1,5:6)])
a = AUC(fit.reitsma)
auc[[z]] = a$AUC
sfit = SummaryPts(fit.reitsma)
sf[[z]] = summary(sfit)
}
srsz = as.data.frame(do.call(rbind, srs))
View(mtdatr)
View(mtdats)
View(mtdats)
dorf
#### Choose sproteins of interest
sel = sroc2$Gene_name[which(sroc2$k.study==11 & sroc2$AUC>0.835)]
s = list()
srs = list()
rdf = list()
sspr = list()
auc = list()
sf = list()
for (z in sel) {
mtdatr = mtdats[[z]]
#### Forest plots
nam = studies[as.numeric(rownames(mtdatr))]
fit.reitsma = reitsma(mtdatr)
#### Extract data for the SROCs
s[[z]] = summary(fit.reitsma)
sr = sroc(fit.reitsma) ## To get the SROC curve data
msr = mcsroc(fit.reitsma)
re = ROCellipse(fit.reitsma, level=0.95)
rdf[[z]] = as.data.frame(re$ROCellipse)
srs[[z]] = as.data.frame(sr)
sspr[[z]] = as.data.frame(s[[z]]$coefficients[3:4,c(1,5:6)])
a = AUC(fit.reitsma)
auc[[z]] = a$AUC
sfit = SummaryPts(fit.reitsma)
sf[[z]] = summary(sfit)
}
srsz = as.data.frame(do.call(rbind, srs))
srsz$protein = gsub("[.].+", "", rownames(srsz))
ssprz = as.data.frame(do.call(rbind, sspr))
ssprz$protein = gsub("[.].+", "", rownames(ssprz))
scof = list()
for (i in names(s)) {
scof[[i]] = s[[i]]$coefficients[c(4,3)]
}
sz = as.data.frame(do.call(rbind, scof))
sz$protein = gsub("[.].+", "", rownames(sz))
rdfz = as.data.frame(do.call(rbind, rdf))
rdfz$protein = gsub("[.].+", "", rownames(rdfz))
colors = brewer.pal(n = 10, name = "Paired")
##### Convert to plotly
p = ggplot(srsz, aes(fpr, V2, col=protein)) +
geom_mark_hull(data=rdfz, aes(V1, V2, col=protein), expand=0, linetype="dotted", size=0.75) +
geom_line(size=1) +
scale_x_continuous("FPR (1-Specificity)", limits=c(0,1), breaks=seq(0,1,0.1)) +
scale_y_continuous("Sensitivity", limits=c(0,1), breaks=seq(0,1,0.1)) +
theme_classic() +
geom_segment(x = 0, y = 0, xend = 1, yend = 1, col="black", linetype="dashed", size=1) +
geom_point(data=sz, aes(x=V1, y=V2, col=protein, fill=protein), shape=23, size=3) +
theme(legend.position = c(0.8, 0.3)) +
scale_color_manual("Protein", values=colors) +
scale_fill_manual("Protein", values=colors)
p
p
getwd()
ggsave("Meta_analysis_SROC_top_10.pdf", p, dpi=600, width=7, height=5.5)
t_summary = load("t_summary.RData")
t_summary = readRDS("t_summary.RData")
t_summary = read_rds("t_summary.RData")
rm(t_summary)
t_summary = read_rds("t_summary.RData")
studies = c("Babacic", "Shen", "Geyer", "Shu", "Di", "Messner-Discovery",
"Messner-Validation", "Suvarna", "Sullivan", "Overmyer", "Zhang")
names = list()
names[[1]] = rownames(t_summary[[1]])
for(i in 2:ns) {
names[[i]] = union(rownames(t_summary[[i]]), names[[i-1]])
}
roc_prot = as.data.frame(names[[i]])
colnames(roc_prot) = "gene_name"
for (i in 1:ns) {
sel = which(roc_prot$gene_name %in% rownames(t_summary[[i]]))
roc_prot[,i+1] = 0
roc_prot[,i+1][sel] = 1
}
colnames(roc_prot)[-1] = studies
roc_prot$nstud = apply(roc_prot[,-1], 1, sum)
##### Select proteins of interest
selected = roc_prot$gene_name[which(roc_prot$gene_name %in% meta_results$gene_name
& roc_prot$nstud>1)]
# These have been removed because there were too few observations to make the analysis
selected = selected[-which(selected %in% c("RANBP2", "VSIG4", "ENG", "ASGR2", "CLSTN1",
"PSMA4", "NCAM2", "SNED1"))]
mtdats = list()
fit.reitsmas = list()
fit.DOR.DSLs = list()
sumfit.DOR = list()
sumfit.reits = list()
coef1 = list()
coef2 = list()
coef = list()
getwd()
for(z in selected) {
values = list()
prot = z
for(i in 1:11) {
t = as.data.frame(t_summary[[i]])
if (prot %in% rownames(t)) {
values[[i]] = t_summary[[i]][prot,]
} else {
values[[i]] = NA
}
}
mtdat = as.data.frame(do.call(rbind, values))
colnames(mtdat) = c("FN", "TP", "TN", "FP")
mtdat = na.omit(mtdat)
mtdats[[z]] = mtdat
fit.DOR.DSL <- madauni(mtdat, correction=0.5)
fit.DOR.DSLs[[z]] = fit.DOR.DSL
sumfit.DOR[[z]] = summary(fit.DOR.DSL)
coef1[[z]] = c(sumfit.DOR[[z]]$CIcoef[1,], sumfit.DOR[[z]]$CIcoef[2,], sumfit.DOR[[z]]$CIcoef[3,], sumfit.DOR[[z]]$CIcoef[4,],
sumfit.DOR[[z]]$Isq, sumfit.DOR[[z]]$x$CQ)
names(coef1[[z]])[c(1,4,7,10,13,14)] = c("DOR", "lnDOR", "tau^2", "tau", "I^2", "Q")
fit.reitsma <- reitsma(mtdat, correction=0.5)
fit.reitsmas[[z]] = fit.reitsma
sumfit.reits[[z]] = summary(fit.reitsma)
s = SummaryPts(fit.reitsma)
coef2[[z]] = c(sumfit.reits[[z]]$coefficients[3,c(1,5,6)], 1-sumfit.reits[[z]]$coefficients[4,c(1,6,5)], summary(s)[4,],
summary(s)[1,], summary(s)[2,], sumfit.reits[[z]]$AUC$AUC)
names(coef2[[z]])[c(1,4,7,8,11,12,15,16,19)] = c("Sensitivity", "Specificity", "Mean DOR", "Median DOR",
"Mean Pos.LR", "Median Pos.LR",
"Mean Neg.LR", "Median Neg.LR", "AUC")
names(coef2[[z]])[c(2,5,9,13,17)] = "2.5 %"
names(coef2[[z]])[c(3,6,10,14,18)] = "97.5 %"
coef[[z]] = c("Bivariate model, Reitsma 2005", round(coef2[[z]], 3), "Univariate model, Glas 2003", round(coef1[[z]], 3))
print(paste("Protein", z, "is done."))
}
dorf = as.data.frame(do.call(rbind, coef))
dorf$Gene_name = rownames(dorf)
colnames(dorf)[c(1,21)] = "Method"
dorf = dorf[,c(38,1:37)]
colnames(dorf)[c(4:5, 7:8, 11:12, 15:16, 19:20, 24:25, 27:28, 30:31, 33:34)] =
c("lower.Sensitivity", "upper.Sensitivity", "lower.Specificity", "upper.Specificity",
"lower.Mean.DOR", "upper.Mean.DOR", "lower.Pos.LR", "upper.Pos.LR", "lower.Neg.LR",
"upper.Neg.LR", "lower.DOR", "upper.DOR", "lower.lnDOR", "upper.lnDOR",
"lower.tau.2", "upper.tau.2", "lower.tau", "upper.tau")
dorf[,-c(1,2,22)] = apply(dorf[,-c(1,2,22)], 2, as.numeric)
View(dorf)
plot(1-dorf$Specificity, dorf$Sensitivity)
?esc_mean_sd
?metagen
